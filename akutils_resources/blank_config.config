## config file for qiime_workflow.sh script.
##
## Modify as necessary.
## Consdier using the config utility to make changes to this file.
## eqw.sh config
##
## Format is one item per line.  <settings> <tab> <path to file or definition>
##

## Lines with hashes are ignored.
## Settings descriptions:

## QIIME SETTINGS BELOW HERE
##	Reference	(database reference fasta -- eg greengenes)
##	Taxonomy	(database taxonomy file -- eg greengenes)
##	Tree	(database tree file -- eg greengenes)
##	Chimeras	(fasta for filtering against -- eg gold.fa)
##	Alignment_template	(template file -- eg core_set_aligned.fasta.imputed)
##	Alignment_lanemask	(lanemask file -- eg lanemask_in_1s_and_0s)
##	Split_libraries_qvalue	(Set to one less than desired level.  19 qill return q20 or better sequences.)
##	Threads_chimera_filter	(Threads to use during chimera filtering -- limit to # available processors.)
##	Threads_pick_otus	(Threads to use during OTU picking -- limit to # available processors.)
##	Threads_assign_taxonomy	(Threads to use during rdp tax assignment -- limit to 8 or 12 depending on system.)
##	Threads_align_seqs	(Threads to use during sequence alignment (16S only) -- limit to # available processors.)
##	RDP_confidence	(Confidence bootstrap value required to make an assignment.  0.5-0.6 seems to work well.)
##	RDP_max_memory	(Will need a minimum of 6000.  Value is in MB.  Larger datasets or reference databases will require this value to be increased.  Decrease your thread count for tax assignment so you don't run out of RAM.)
##	RC_seqs	(True or False.  If your raw data is in opposite orientation from database, set to true to reverse complement after demultiplexing.)
##	Prefix_length	(Length of prefix to collapse on in bp)
##	Suffix_length	(Length of suffix to collapse on in bp)
##	OTU_picker	(OTU picking method - any pick_otus.py method, openref or closedref for those workflows.  Blast calls parallel blast.)
##	Tax_assigner	(RDP, uclust or blast)

## FASTQ-JOIN SETTINGS BELOW HERE
##	Min_overlap	(Minimum overlap required during read joining steps.)
##	Max_mismatch	(Maximum mismatch allowed during read joining steps.)

## FASTQ-MCF SETTINGS BELOW HERE
##	Threads_mcf	(Threads to use while filtering primer sequences from raw fastq data.)

## FASTQ_MULTX SETTINGS BELOW HERE
##	Multx_errors	(Maximum indexing mismatches allowed during initial demultiplexing step.)

## SMALT SETTINGS BELOW HERE
##	PhiX_index	(ABSOLUTE path to your PhiX index generated with smalt.  Do NOT include file extensions.)
##	Threads_smalt	(Threads to use while filtering PhiX from raw fastq data.)

## ITSx SETTINGS BELOW HERE
## 	Threads_ITSx	(Threads to use during ITSx filtering -- limit to # available processors)
## 	ITSx_options	(Options to use for ITSx -- see ITSx manual for details)

## Settings in use for eqw.sh script below (without leading "#" characters).  Order is unimportant.

Threads_mcf	undefined
Multx_errors	undefined
PhiX_index	undefined
Threads_smalt	undefined
Min_overlap	undefined
Max_mismatch	undefined
Threads_ITSx	undefined
ITSx_options	undefined

Reference	undefined
Taxonomy	undefined
Tree	undefined
Chimeras	undefined
Alignment_template	undefined
Alignment_lanemask	undefined

Split_libraries_qvalue	undefined
Threads_chimera_filter	undefined
Prefix_length	undefined
Suffix_length	undefined
OTU_picker	undefined
Threads_pick_otus	undefined
Tax_assigner	undefined
Threads_assign_taxonomy	undefined
RDP_confidence	undefined
RDP_max_memory	undefined
Threads_align_seqs	undefined

RC_seqs	undefined

