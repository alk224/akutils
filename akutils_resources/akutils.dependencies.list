##QIIME_commands:
analyze_primers.py	(db_format.sh)
collapse_samples.py	(cdiv_graphs_and_stats_workflow.sh)
collate_alpha.py	(cdiv_graphs_and_stats_workflow.sh)
compare_alpha_diversity.py	(cdiv_graphs_and_stats_workflow.sh)
compare_categories.py	(cdiv_graphs_and_stats_workflow.sh)
filter_alignment.py	(align_and_tree_workflow.sh)
filter_fasta.py	(ITSx_parallel.sh,PhiX_filtering_workflow.sh,strip_primers.sh)
filter_otus_from_otu_table.py	(otu_picking_workflow.sh)
filter_samples_from_otu_table.py	(otu_picking_workflow.sh)
filter_taxa_from_otu_table.py	(otu_picking_workflow.sh)
filter_tree.py	(db_format.sh)
get_amplicons_and_reads.py	(db_format.sh)
group_significance.py	(cdiv_graphs_and_stats_workflow.sh)
make_2d_plots.py	(cdiv_graphs_and_stats_workflow.sh)
make_distance_boxplots.py	((cdiv_graphs_and_stats_workflow.sh)
make_emperor.py	(cdiv_graphs_and_stats_workflow.sh)
make_otu_heatmap.py	(cdiv_graphs_and_stats_workflow.sh)
make_otu_table.py	(otu_picking_workflow.sh)
make_phylogeny.py	(align_and_tree_workflow.sh)
make_rarefaction_plots.py	(cdiv_graphs_and_stats_workflow.sh)
merge_otu_maps.py	(otu_picking_workflow.sh)
nmds.py	(cdiv_graphs_and_stats_workflow.sh)
normalize_table.py	(otu_picking_workflow.sh)
parallel_align_seqs_pynast.py	(align_and_tree_workflow.sh)
parallel_alpha_diversity.py	(cdiv_for_nonnormalized_tables.sh)
parallel_assign_taxonomy_blast.py	(otu_picking_workflow.sh)
parallel_assign_taxonomy_rdp.py	(otu_picking_workflow.sh)
parallel_assign_taxonomy_uclust.py	(otu_picking_workflow.sh)
parallel_beta_diversity.py	(cdiv_graphs_and_stats_workflow.sh)
parallel_multiple_rarefactions.py	(cdiv_graphs_and_stats_workflow.sh)
parallel_pick_otus_blast.py	(otu_picking_workflow.sh)
pick_open_reference_otus.py	(otu_picking_workflow.sh)
pick_otus.py	(otu_picking_workflow.sh)
pick_rep_set.py	(otu_picking_workflow.sh)
plot_rank_abundance_graph.py	(cdiv_graphs_and_stats_workflow.sh)
plot_taxa_summary.py	(cdiv_graphs_and_stats_workflow.sh)
principal_coordinates.py	(cdiv_graphs_and_stats_workflow.sh)
sort_otu_table.py	(cdiv_graphs_and_stats_workflow.sh)
split_libraries_fastq.py	(otu_picking_workflow.sh)
summarize_taxa.py	(cdiv_graphs_and_stats_workflow.sh)
supervised_learning.py	(cdiv_graphs_and_stats_workflow.sh)


##ea-utils_commands:
fastq-join	(Dual_indexed_fqjoin_workflow.sh,Single_indexed_fqjoin_workflow.sh)
fastq-mcf	(strip_primers.sh)
fastq-multx	(Phix_filtering_workflow.sh)

##Fastx-toolkit_commands:
fastx_trimmer	(Dual_indexed_fqjoin_workflow.sh,Single_indexed_fqjoin_workflow.sh)

##ITSx_commands:
ITSx

##Biom_commands:
biom	(biom-summarize_folder.sh,biomtotxt.sh,txttobiom.sh,otu_picking_workflow.sh)

##Mafft_commands:
mafft	(match_reads_to_taxonomy.sh, align_and_tree_workflow.sh)

##Smalt_commands:
smalt	(PhiX_filtering_workflow.sh)

##Vsearch_commands:
vsearch	(otu_picking_workflow.sh)

##akutils_commands:
biom-summarize_folder.sh	(otu_picking_workflow.sh)
concatenate_fastqs.sh	(Dual_indexed_fqjoin_workflow.sh,Single_indexed_fqjoin_workflow.sh)
filter_observations_by_sample.py	(otu_picking_workflow.sh)
ITSx_parallel.sh	(otu_picking_workflow.sh)
match_reads_to_taxonomy.sh	(cdiv_graphs_and_stats_workflow.sh)
relativize_otu_table.py	(cdiv_graphs_and_stats_workflow.sh)
unwrap_fasta.sh	(otu_picking_workflow.sh)
normalized_table_beta_diversity.sh	(cdiv_graphs_and_stats_workflow.sh)
nonnormalized_table_diversity_analyses.sh	(cdiv_graphs_and_stats_workflow.sh)

##bash_commands:
awk
basename
bc
cat
cp
cut
dirname
echo
grep
head
less
pwd
readlink
sed
