
*******************************************
***                                     ***
***   Dual-indexed_fqjoin_workflow.sh   ***
***                                     ***
*******************************************

Join paired end data with dual indexing

Usage (order is important!!):
Dual_indexed_fqjoin_workflow.sh <Index1Fastq> <Index2Fastq> <Read1Fastq> <Read2Fastq> <IndexLength> <Fastq-join options>

This script takes paired end fastq files with two separate index reads
(4 input files) and joins the paired end reads where possible while
keeping all reads in phase.  This is crucial for downstream use in
certain applications (e.g., as inputs to QIIME).

Output will be 2 files, an index file (idx.fq) and a read file (rd.fq). 
The index will be a concatenation of the two index reads such that the
resulting sequence will be:
	<index1seq><index2seq>

Example:
Dual_indexed_fqjoin_workflow.sh index1.fq index2.fq read1.fq read2.fq 16 -m 30 -p 10

This example is joining fastq files read1.fq and read2.fq  while keeping
reads in sync with index1.fq.  The index reads are each 8 bases long,
and it is calling options to the fastq-join command as -m 30 (minimum
overlap of 30 bases) and -p 10 (10 percent allowable mismatch).

Requires the following dependencies to run:
	1) ea-utils (https://code.google.com/p/ea-utils/)
	2) Fastx toolkit (http://hannonlab.cshl.edu/fastx_toolkit/)

Citing ea-utils: Erik Aronesty (2011). ea-utils: Command-line tools for
processing biological sequencing data; http://code.google.com/p/ea-utils

